TODO features:
- If you plan to reset a scene or level, consider exposing a .reset() method in Storage that calls chunkIdPool.reset() and clears all internal maps. This would make recycling the whole world easier without creating new instances.
- EntityMetaSet should be instanciated via SparseSet
- fix the interp angles for smooth rotation
- if chunk is full upload the whole thing? (no subarrays)
- make consistent error messaging across the codebase
- in GUI if store hasn't changed, there's no need to render
- the renderer resize doesn't fucking work
- the renderer graphics looks blurry
- static and dynamic layering to add
- write unit tests for everything
- systems need to be profiled
- create a BaseSparseSet for duplicate methods implementations
- module organization and tooling should be organized better than this

TODO next (xshooter):
- camera remove offsets from component
- camera adjust component by getting the system props
- better archetype grouping?
- place events where they belong?
- star & star system
- meteor hit effect
- meteor health system & GUI
- pickups
- weapon
- explosion
- special weapon

TODO next (rage-z)
- need a local to world coords converter
- make a boundary system
- collision system should work on hitbox component
- FX system could be made of multiple subsystems
- every component have an active flag
- culling sub system
- the gui storage needs to be an actual storage
- add a dryrun in the systems
- the collision system should probably collect the target entities once and not per-main entity